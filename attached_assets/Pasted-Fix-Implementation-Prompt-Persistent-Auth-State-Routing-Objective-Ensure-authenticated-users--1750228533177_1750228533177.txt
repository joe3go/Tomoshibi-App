Fix Implementation Prompt: Persistent Auth State & Routing

Objective: Ensure authenticated users stay on /dashboard after login/page reload

1. Auth Context Setup
File: src/context/AuthContext.tsx (Create if missing)

typescript

import { createContext, useContext, useEffect, useState } from 'react';  
import { supabase } from '../supabaseClient';  

type AuthContextType = {  
  user: any;  
  loading: boolean;  
};  

const AuthContext = createContext<AuthContextType>({ user: null, loading: true });  

export function AuthProvider({ children }: { children: React.ReactNode }) {  
  const [user, setUser] = useState<any>(null);  
  const [loading, setLoading] = useState(true);  

  useEffect(() => {  
    const checkAuth = async () => {  
      const {  
        data: { session },  
      } = await supabase.auth.getSession();  

      setUser(session?.user ?? null);  
      setLoading(false);  
    };  

    checkAuth();  

    const { data: { subscription } } = supabase.auth.onAuthStateChange(() => checkAuth());  
    return () => subscription?.unsubscribe();  
  }, []);  

  return (  
    <AuthContext.Provider value={{ user, loading }}>  
      {children}  
    </AuthContext.Provider>  
  );  
}  

export const useAuth = () => useContext(AuthContext);  
2. Protected Route Component
File: src/components/ProtectedRoute.tsx

typescript

import { useEffect } from 'react';  
import { Navigate, Outlet } from 'react-router-dom';  
import { useAuth } from '../context/AuthContext';  

export default function ProtectedRoute() {  
  const { user, loading } = useAuth();  

  useEffect(() => {  
    if (!loading && !user) {  
      window.location.href = '/login'; // Hard redirect breaks SPA to clear state  
    }  
  }, [user, loading]);  

  if (loading) return <div>Loading authentication...</div>;  
  return user ? <Outlet /> : <Navigate to="/login" replace />;  
}  
3. Route Configuration Update
File: src/App.tsx

typescript

import { BrowserRouter, Routes, Route } from 'react-router-dom';  
import { AuthProvider } from './context/AuthContext';  
import ProtectedRoute from './components/ProtectedRoute';  
import Login from './pages/Login';  
import Dashboard from './pages/Dashboard';  

function App() {  
  return (  
    <BrowserRouter>  
      <AuthProvider>  
        <Routes>  
          <Route path="/login" element={<Login />} />  
          <Route element={<ProtectedRoute />}>  
            <Route path="/dashboard" element={<Dashboard />} />  
          </Route>  
          <Route path="*" element={<Navigate to="/dashboard" />} />  
        </Routes>  
      </AuthProvider>  
    </BrowserRouter>  
  );  
}  
4. Execute These Commands
bash

# Clear cached auth data && rebuild  
rm -rf .cache/ dist/ node_modules/  
npm install  
npm run build && npm start  

# Then hard-refresh browser (Ctrl+Shift+R)  
✅ Verification Steps

Test Login Flow

Login → Should see full page reload to /dashboard (URL bar flashes)
No login UI remnants on dashboard

Test Page Reload

On /dashboard → Refresh page → Should stay on dashboard
Check network tab for getSession → 200 OK

Test Logout

Log out → Should redirect to /login without dashboard flicker

Key Fixes:


Added mandatory session check on initial load

Hard redirect breaks React SPA behavior when unauthenticated

Centralized auth state management with context

Last-Mile Fix: Add loading spinner during auth check to prevent layout shift!